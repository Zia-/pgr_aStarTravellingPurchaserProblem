-- THE FOLLOWING PROCEDURAL FUNCTION WILL SOLVE OUR TRAVELLING PURCHASER PROBLEM --
-- The arguments are the table name, the starting and ending points coord and the via points ids (which we have defined in
-- the individual_stops table - Consult the Documentation of this repo) --
-- In this code, temporary tables' creation could be replaced by something better and looping could be reduced by two --

create or replace function pgr_aStarTPP_directline_search(IN tbl character varying, 
IN x1 double precision,
IN y1 double precision,
IN x2 double precision,
IN y2 double precision,
variadic double precision[],
OUT seq integer, 
OUT gid integer, 
OUT name text,
OUT cost double precision,
OUT geom geometry
)
RETURNS SETOF record AS
$body$
declare
	breakwhile integer;
	ending_id integer;
	via_id integer;
	total_loop integer;
	source_var integer;
	num integer;
	target_var integer;
	sum_cost_old double precision;
	sum_cost double precision;
	sum_cost_again double precision;	
	sql_tsp text;
	sql_astar text;
	sql_loop text;
	sql_loop1 text;
	sql_loop2 text;
	sql_loop3 text;
	sql_codes text;
	rec_tsp record;
	node record;
	rec_astar record;	
	sum_cost_rec record;
	rec_loop record;	
	rec_loop1 record;
	rec_loop2 record;
	rec_loop3 record;
	rec_codes record;
	
begin
	breakwhile := array_length($6,1);
	--create temporary table codes (sid serial, id_code integer);
	create temporary table vertex_points (sid serial, node_id integer, x double precision, y double precision, geom_ver geometry); 
	--create temporary table final_vertex (sid serial, id_code integer, node_id integer, x double precision, y double precision, geom_ver_final geometry);
	--For i in 1..breakwhile
	--	Loop
	--		execute 'insert into codes (id_code) values ('||$6[i]||')';
	--	End Loop;
	------------ Feed the starting points ways_vertex_pgr point ----------
	execute 'insert into vertex_points (node_id, x, y, geom_ver) select id, st_x(the_geom)::double precision, st_y(the_geom)::double precision, the_geom from ways_vertices_pgr 
		ORDER BY the_geom <-> ST_GeometryFromText(''Point('||x1||' '||y1||')'', 4326) limit 1';
	-----------
	--sql_codes := 'select * from codes';
	For i in 1..breakwhile
		Loop
			execute 'with main_azimuth as (select st_azimuth(st_setsrid(ST_MakePoint('||x1||','||y1||'),4326), st_setsrid(ST_MakePoint('||x2||','||y2||'),4326)) as main_angle),
			vertex as (select the_geom as geoms from individual_stops, main_azimuth where id = '||$6[i]||' and st_azimuth(st_setsrid(ST_MakePoint('||x1||','||y1||'),4326), the_geom) Not Between main_angle+1.5708 And main_angle+4.7124
			order by st_distance(ST_MakeLine(st_setsrid(ST_MakePoint('||x1||','||y1||'),4326), st_setsrid(ST_MakePoint('||x2||','||y2||'),4326)), the_geom) limit 1)
			insert into vertex_points (node_id, x, y, geom_ver) select id, st_x(the_geom)::double precision, st_y(the_geom)::double precision, the_geom from ways_vertices_pgr, vertex 
			ORDER BY the_geom <-> geoms limit 1';
		End Loop;
	--execute 'insert into final_vertex (id_code, node_id, x, y, geom_ver_final) select id_code, node_id, x, y, geom_ver from vertex_points order by
	--	st_distance(ST_MakeLine(st_setsrid(ST_MakePoint('||x1||','||y1||'),4326), st_setsrid(ST_MakePoint('||x2||','||y2||'),4326)), geom_ver) limit 1';
	--execute 'delete from vertex_points';
	-----------
	execute 'insert into vertex_points (node_id, x, y, geom_ver) select id, st_x(the_geom)::double precision, st_y(the_geom)::double precision, the_geom from ways_vertices_pgr 
		ORDER BY the_geom <-> ST_GeometryFromText(''Point('||x2||' '||y2||')'', 4326) limit 1';
	-----------
	seq := 0;
	sql_loop1 := 'select * from vertex_points';
	For rec_loop1 in execute sql_loop1
		Loop
			seq := seq +1 ;
			gid := rec_loop1.node_id;
			name := 'Zia';
			cost := 2633.0545864;
			geom := rec_loop1.geom_ver;
			RETURN NEXT;
		End Loop;
	Return Next;



	
	drop table vertex_points;
	return;
end;
$body$
language plpgsql volatile STRICT;


-- select geom from pgr_aStarTPP_directline_search('ways', 29.104768000000000,41.027425000000001,29.122485000000001,41.048262999999999, 101, 102, 103)







